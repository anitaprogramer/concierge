<?phpif (!defined('BASEPATH'))    exit('No direct access allowed');class Contacto extends Front_Controller {    public function __construct() {        parent::__construct();        $this->load->model('contacto_model');        $this->_model = & $this->contacto_model;        $this->load->library('form_validation');        $this->config->load('email', TRUE);        $this->load->library('email');        $this->load->library('parser');        $this->load->helper('date');        $this->load->helper('toolkit');        $this->_init();    }    public function index() {        $this->form_validation->set_rules('nombre', 'Nombre', 'required');        $this->form_validation->set_rules('email', 'Email', 'required');        $this->form_validation->set_rules('telefono', 'TelÃ©fono', 'required');        $this->form_validation->set_rules('mensaje', 'Mensaje', 'required');        if ($this->form_validation->run()) {            $email_config = $this->config->item('email');            // Datos a pasar al contenido del email            $data = array(                'nombre' => clear_input('nombre'),                'email' => clear_input('email'),                'telefono' => clear_input('telefono'),                'mensaje' => clear_input('mensaje'),                'date' => get_current_date_str()            );            // Generar el contenido del email            $body = $this->parser->parse('email/contacto', $data, TRUE);            // Asunto del email            $subject = 'Mensaje de contacto';            // Datos a pasar a la plantilla            $template_data = array(                'copy_year' => date('Y'),                'copy_company' => 'Lacyma',                'subject' => $subject,                'body' => $body            );            // Unir todas las partes de la plantilla y formar todo el contenido del email            $message = $this->parser->parse('templates/email', $template_data, TRUE);            // Configuraciones de envio            $this->email->from($email_config['smtp_user'], 'Contacto');            $this->email->to($email_config['to_email'], $email_config['to_name']);            $this->email->subject($subject);            $this->email->message($message);            if ($this->email->send()) {                $this->message->set('Mensaje Enviado Correctamente', 'info');                redirect(get_current_route());            } else {                redirect(get_current_route() . 'error');            }        }        $this->_data['nombre'] = array(            'name' => 'nombre',            'class' => 'form-control',            'required' => 'required',            'label' => 'Nombre',            'value' => set_value('nombre')        );        $this->_data['email'] = array(            'name' => 'email',            'class' => 'form-control',            'required' => 'required',            'type' => 'email',            'label' => 'E-Mail',            'value' => set_value('email')        );        $this->_data['telefono'] = array(            'name' => 'telefono',            'class' => 'form-control',            'required' => '',            'label' => 'TelÃ©fono',            'value' => set_value('telefono')        );        $this->_data['mensaje'] = array(            'name' => 'mensaje',            'value' => set_value('mensaje'),            'label' => 'Mensaje',            'type' => 'textarea',            'cols' => 10,            'rows' => 8,            'class' => 'form-control'        );        // $this->template->set('rs_direccion', $this->_model->get_address());        $where = array(            'id_plaza' => 0        );        $this->template->set('rs', $this->_model->get_contact($where));        $this->template->set('message', $this->message->get());        $this->_render();    }    public function enviado() {        if ($this->session->flashdata('flag') !== true) {            redirect(index_page());        }        $this->_render();    }    public function error() {        if ($this->session->flashdata('flag') !== true) {            redirect(index_page());        }        $this->_render();    }    public function get_location() {        if ($this->input->is_ajax_request()) {            $id_plaza = $this->input->get('id_plaza');            $rs = $this->_model->get_location($id_plaza);            if (!empty($rs) && $rs !== false) {                exit(json_encode(array('retval' => true, 'location' => $rs)));            } else {                exit(json_encode(array('retval' => false)));            }        }    }}